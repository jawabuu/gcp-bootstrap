name: Terraform Apply

on:
  push:
    branches:        
      - "master"

jobs:
  terraform:
    name: Linux build on node ${{ matrix.node_version }}
    runs-on: ubuntu-latest

    env:
        GCP_LOCATION: europe-west1-b
        GCP_REGION: europe-west1
        GCP_ZONE: b
        GKE_CLUSTER_NAME: silvester-cluster
        PROJECT_ID: silvester-304916
        KUBEIP_NODEPOOL: silvester-nodepool-apps
        KUBEIP_SELF_NODEPOOL: silvester-nodepool-ingress

    defaults:
      run:
        working-directory: ./

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: INSTALL - CLI - GCLoud
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: silvester-304916
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    
    - name: "INSTALL - CLI - Terraform"
      uses: hashicorp/setup-terraform@v1
 
    - name: INSTALL - CLI - Helm
      uses: azure/setup-helm@v1



    # TERRAFORM CLUSTER
    - name: "CLUSTER - Terraform - Init"
      run: terraform -chdir=./terraform/cluster init -input=false

    - name: "CLUSTER - Terraform - Import - Cluster"
      run: terraform -chdir=./terraform/cluster import google_container_cluster.silvester_cluster $GCP_LOCATION/$GKE_CLUSTER_NAME
      continue-on-error: true

    - name: "CLUSTER - Terraform - Import - Ingress Node Pool"
      run: terraform -chdir=./terraform/cluster import google_container_node_pool.silvester_nodepool_ingress $GCP_LOCATION/$GKE_CLUSTER_NAME/silvester-nodepool-ingress 
      continue-on-error: true

    - name: "CLUSTER - Terraform - Import - Apps Node Pool"
      run: terraform -chdir=./terraform/cluster import google_container_node_pool.silvester_nodepool_apps $GCP_LOCATION/$GKE_CLUSTER_NAME/silvester-nodepool-apps 
      continue-on-error: true

    - name: "CLUSTER - Terraform - Import - HTTP Traffic"
      run: terraform -chdir=./terraform/cluster import google_compute_firewall.http_node_port http-node-port
      continue-on-error: true

    - name: "CLUSTER - Terraform - Import - HTTPS Traffic"
      run: terraform -chdir=./terraform/cluster import google_compute_firewall.https_node_port https-node-port
      continue-on-error: true

    - name: "CLUSTER - Terraform - Apply"
      run: terraform -chdir=./terraform/cluster apply -input=false -auto-approve





    # INSTALL KUBERNETES APPLICATIONS
    - name: "KUBERNETES - Set Credentials"
      uses: google-github-actions/get-gke-credentials@main
      with:
        cluster_name: ${{ env.GKE_CLUSTER_NAME }}
        location: ${{ env.GCP_LOCATION }}
        credentials: ${{ secrets.GCP_SA_KEY }}

    # TERRAFORM KUBERNETES
    - name: "CLUSTER - Terraform - Init"
      run: terraform -chdir=./terraform/kubernetes init -input=false

    - name: "CLUSTER - Terraform - Import - KubeIP Namespace"
      run: terraform -config_file=$KUBECONFIG -chdir=./terraform/kubernetes import kubernetes_namespace.kubeip_namespace kubeip
      continue-on-error: true

    - name: "CLUSTER - Terraform - Apply"
      run: terraform -chdir=./terraform/kubernetes apply -input=false -auto-approve 



    # TERRAFORM KUBEIP
    - name: "CLUSTER - Terraform - Init"
      run: terraform -chdir=./terraform/kubeip init -input=false

    - name: "CLUSTER - Terraform - Import - KubeIP Service Account"
      run: terraform -chdir=./terraform/kubeip import google_service_account.kubeip_service_account "projects/$PROJECT_ID/serviceAccounts/kubeip-service-account@$PROJECT_ID.iam.gserviceaccount.com"
      continue-on-error: true
      
    - name: "CLUSTER - Terraform - Import - KubeIP Role"
      run: terraform -chdir=./terraform/kubeip import google_project_iam_custom_role.kubeip_role kubeip 
      continue-on-error: true
      
    - name: "CLUSTER - Terraform - Import - KubeIP Role Binding"
      run: terraform -chdir=./terraform/kubeip import google_project_iam_binding.kubeip_role_binding "$PROJECT_ID roles/kubeip"
      continue-on-error: true

    - name: "CLUSTER - Terraform - Import - KubeIP IAM Policy Binding"
      run: terraform -chdir=./terraform/kubeip import google_project_iam_binding.kubeip_iam_policy_binding "$PROJECT_ID roles/iam.workloadIdentityUser"
      continue-on-error: true

    - name: "CLUSTER - Terraform - Apply"
      run: terraform -chdir=./terraform/kubeip apply -input=false -auto-approve




      
    - name: "KUBERNETES - Install Nginx Ingress Controller"
      run: |
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm repo update
        helm upgrade --install nginx-ingress ingress-nginx/ingress-nginx -f ./charts/nginx-ingress-controller/values.yaml --namespace ingress-nginx --kubeconfig $KUBECONFIG
    
    - name: "KUBERNETES - Install KubeIP"    
      run: |
        helm upgrade --install kubeip ./charts/kubeip -f ./charts/kubeip/values.yaml --namespace kubeip --kubeconfig $KUBECONFIG